{"ast":null,"code":"var _jsxFileName = \"/home/nabanit/gitproject/corona-finalmap/src/Mapbox.js\";\nimport React, { useEffect, useState } from 'react';\nimport ReactMapGl, { Marker, Popup } from 'react-map-gl';\nimport { coronaNepal } from './../src/httpBrowsing';\nimport './Mapbox.css';\nimport * as Data from './data.json';\nimport axios from 'axios';\n\nfunction Mapbox() {\n  const [viewPort, setviewPort] = useState({\n    latitude: 27.713264,\n    longitude: 85.322985,\n    width: \"100vw\",\n    height: \"100vh\",\n    zoom: 10\n  });\n  const [coronaNepal, setcoronaNepal] = useState([]);\n  const [selectedPerson, setselectedPerson] = useState(null);\n  const [provinence, setprovinence] = useState([]);\n  useEffect(() => {\n    axios.get('https://data.nepalcorona.info/api/v1/covid').then(res => {\n      console.log(\"what is this>>\", res);\n      setcoronaNepal(res.data);\n      setprovinence(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  console.log(\"what is coronanepal>>\", coronaNepal);\n  console.log(\"what is provinence>>\", provinence);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ReactMapGl, Object.assign({}, viewPort, {\n    mapboxApiAccessToken: \"pk.eyJ1IjoibmFiYW5pdCIsImEiOiJja2E4MXR3NDkwNGMxMzJzOWF4Zzk1cmRxIn0.PlAUDME-BUb9gV-DCutXzw\",\n    mapStyle: \"mapbox://styles/nabanit/cka7uauty1vpl1ip2f33744yz\",\n    onViewportChange: viewPort => setviewPort(viewPort),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/recovered.jpeg\",\n    alt: \"recovered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }), \":Recovered\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 76\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/ongoing.gif\",\n    alt: \"ongoing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }), \":Treatment Ongoing\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 79\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/dead.gif\",\n    alt: \"dead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }), \":Death\"), provinence.filter(item => item.provinence === provinence).map(item => {\n    /*#__PURE__*/\n    React.createElement(\"option\", {\n      key: item.id,\n      value: item.provinence,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, provinence);\n  }), coronaNepal.filter(local => local.currentState === 'recovered').map(local => /*#__PURE__*/React.createElement(Marker, {\n    key: local.id,\n    latitude: local.point.coordinates[1],\n    longitude: local.point.coordinates[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"marker-btn\",\n    onMouseOver: e => {\n      e.preventDefault();\n      setselectedPerson(local);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/recovered.jpeg\",\n    alt: \"recovered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }\n  })))), coronaNepal.filter(local => local.currentState === 'active').map(local => /*#__PURE__*/React.createElement(Marker, {\n    key: local.id,\n    latitude: local.point.coordinates[1],\n    longitude: local.point.coordinates[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"marker-btn\",\n    onMouseOver: e => {\n      e.preventDefault();\n      setselectedPerson(local);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/ongoing.gif\",\n    alt: \"ongoing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  })))), coronaNepal.filter(local => local.currentState === 'death').map(local => /*#__PURE__*/React.createElement(Marker, {\n    key: local.id,\n    latitude: local.point.coordinates[1],\n    longitude: local.point.coordinates[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"marker-btn-dead\",\n    onMouseOver: e => {\n      e.preventDefault();\n      setselectedPerson(local);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/dead.gif\",\n    alt: \"dead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  })))), selectedPerson ? /*#__PURE__*/React.createElement(Popup, {\n    latitude: selectedPerson.point.coordinates[1],\n    longitude: selectedPerson.point.coordinates[0],\n    onClose: () => setselectedPerson(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  }, \"Age=\", selectedPerson.age), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }, \"Gender=\", selectedPerson.gender), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  }, \"Reported On=\", selectedPerson.reportedOn), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }, \"Recovered On=\", selectedPerson.recoveredOn), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, \"Transmission Type=\", selectedPerson.type), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  }, \"current Status=\", selectedPerson.currentState), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, \"latitude=\", selectedPerson.point.coordinates[1], \",longitude=\", selectedPerson.point.coordinates[0]))) : null));\n}\n\nexport default Mapbox;","map":{"version":3,"sources":["/home/nabanit/gitproject/corona-finalmap/src/Mapbox.js"],"names":["React","useEffect","useState","ReactMapGl","Marker","Popup","coronaNepal","Data","axios","Mapbox","viewPort","setviewPort","latitude","longitude","width","height","zoom","setcoronaNepal","selectedPerson","setselectedPerson","provinence","setprovinence","get","then","res","console","log","data","catch","err","filter","item","map","id","local","currentState","point","coordinates","e","preventDefault","age","gender","reportedOn","recoveredOn","type"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReactMapGl, { Marker, Popup } from 'react-map-gl';\nimport { coronaNepal } from './../src/httpBrowsing';\nimport './Mapbox.css';\nimport * as Data from './data.json';\nimport axios from 'axios';\n\n\nfunction Mapbox() {\n\n    const [viewPort, setviewPort] = useState({\n        latitude: 27.713264,\n        longitude: 85.322985,\n        width: \"100vw\",\n        height: \"100vh\",\n        zoom: 10,\n    })\n    const [coronaNepal, setcoronaNepal] = useState([]);\n    const [selectedPerson, setselectedPerson] = useState(null);\n    const [provinence, setprovinence] = useState([]);\n    useEffect(() => {\n        axios.get('https://data.nepalcorona.info/api/v1/covid')\n            .then(res => {\n                console.log(\"what is this>>\", res);\n                setcoronaNepal(res.data)\n                setprovinence(res.data)\n\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, [])\n\n    console.log(\"what is coronanepal>>\", coronaNepal);\n    console.log(\"what is provinence>>\", provinence);\n\n    return (\n        <div>\n\n\n\n            <ReactMapGl {...viewPort} mapboxApiAccessToken=\"pk.eyJ1IjoibmFiYW5pdCIsImEiOiJja2E4MXR3NDkwNGMxMzJzOWF4Zzk1cmRxIn0.PlAUDME-BUb9gV-DCutXzw\" mapStyle=\"mapbox://styles/nabanit/cka7uauty1vpl1ip2f33744yz\"\n                onViewportChange={(viewPort) => setviewPort(viewPort)}>\n                <div className=\"legend\">\n                    <img src=\"/recovered.jpeg\" alt=\"recovered\" />:Recovered<br />\n                    <img src=\"/ongoing.gif\" alt=\"ongoing\" />:Treatment Ongoing<br />\n                    <img src=\"/dead.gif\" alt=\"dead\" />:Death\n                    </div>\n                {provinence.filter((item) => item.provinence === provinence).map((item) => {\n                    <option key={item.id} value={item.provinence}>{provinence}</option>\n                }\n                )}\n\n                {coronaNepal.filter((local) => local.currentState === 'recovered').map((local) => (\n                    <Marker key={local.id} latitude={local.point.coordinates[1]} longitude={local.point.coordinates[0]}>\n                        <button className=\"marker-btn\" onMouseOver={e => {\n                            e.preventDefault();\n                            setselectedPerson(local);\n                        }}>\n                            <img src=\"/recovered.jpeg\" alt=\"recovered\" />\n                        </button>\n\n                    </Marker>\n                ))}\n                {coronaNepal.filter((local) => local.currentState === 'active').map((local) => (\n                    <Marker key={local.id} latitude={local.point.coordinates[1]} longitude={local.point.coordinates[0]}>\n                        <button className=\"marker-btn\" onMouseOver={e => {\n                            e.preventDefault();\n                            setselectedPerson(local);\n                        }}>\n                            <img src=\"/ongoing.gif\" alt=\"ongoing\" />\n                        </button>\n\n                    </Marker>\n                ))}\n                {coronaNepal.filter((local) => local.currentState === 'death').map((local) => (\n                    <Marker key={local.id} latitude={local.point.coordinates[1]} longitude={local.point.coordinates[0]}>\n                        <button className=\"marker-btn-dead\" onMouseOver={e => {\n                            e.preventDefault();\n                            setselectedPerson(local);\n                        }}>\n                            <img src=\"/dead.gif\" alt=\"dead\" />\n                        </button>\n\n                    </Marker>\n                ))}\n\n                {selectedPerson ? (\n                    <Popup latitude={selectedPerson.point.coordinates[1]} longitude={selectedPerson.point.coordinates[0]}\n                        onClose={() => (setselectedPerson(null))}>\n\n\n\n                        <div>\n\n                            <p>Age={selectedPerson.age}</p>\n                            <p>Gender={selectedPerson.gender}</p>\n                            <p>Reported On={selectedPerson.reportedOn}</p>\n                            <p>Recovered On={selectedPerson.recoveredOn}</p>\n                            <p>Transmission Type={selectedPerson.type}</p>\n                            <p>current Status={selectedPerson.currentState}</p>\n                            <p>latitude={selectedPerson.point.coordinates[1]},longitude={selectedPerson.point.coordinates[0]}</p>\n                        </div>\n                    </Popup>\n                ) : null}\n\n\n\n            </ReactMapGl>\n        </div>\n    )\n\n\n\n}\n\nexport default Mapbox;\n\n"]},"metadata":{},"sourceType":"module"}