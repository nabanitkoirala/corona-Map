{"ast":null,"code":"var _jsxFileName = \"/home/nabanit/react/mapbox/src/Mapbox.js\";\nimport React, { useState } from 'react';\nimport ReactMapGl, { Marker, Popup } from 'react-map-gl';\nimport * as Data from './data.json';\nimport './Mapbox.css';\n\nfunction Mapbox() {\n  const [viewPort, setviewPort] = useState({\n    latitude: 45.4211,\n    longitude: -75.6903,\n    width: \"100vw\",\n    height: \"100vh\",\n    zoom: 10\n  });\n  const [selectedPark, setSelectedPark] = useState(null);\n  return /*#__PURE__*/React.createElement(ReactMapGl, Object.assign({}, viewPort, {\n    mapboxApiAccessToken: process.env.REACT_APP_MAP_ACCESS_TOKEN,\n    onViewportChange: viewPort => {\n      setviewPort(viewPort);\n    },\n    mapStyle: \"mapbox://styles/nabanit/cka7uauty1vpl1ip2f33744yz\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), Data.features.map(park => /*#__PURE__*/React.createElement(Marker, {\n    key: park.properties.PARK_ID,\n    latitude: park.geometry.coordinates[1],\n    longitude: park.geometry.coordinates[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"marker-btn\",\n    onClick: e => {\n      e.preventDefault();\n      setSelectedPark(park);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/mapmarker.png\",\n    alt: \"park\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  })))), selectedPark ? /*#__PURE__*/React.createElement(Popup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"park\") : null);\n}\n\nexport default Mapbox;","map":{"version":3,"sources":["/home/nabanit/react/mapbox/src/Mapbox.js"],"names":["React","useState","ReactMapGl","Marker","Popup","Data","Mapbox","viewPort","setviewPort","latitude","longitude","width","height","zoom","selectedPark","setSelectedPark","process","env","REACT_APP_MAP_ACCESS_TOKEN","features","map","park","properties","PARK_ID","geometry","coordinates","e","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,IAAqBC,MAArB,EAA6BC,KAA7B,QAA0C,cAA1C;AACA,OAAO,KAAKC,IAAZ,MAAsB,aAAtB;AACA,OAAO,cAAP;;AAOA,SAASC,MAAT,GAAkB;AACd,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC;AACrCQ,IAAAA,QAAQ,EAAE,OAD2B;AAErCC,IAAAA,SAAS,EAAE,CAAC,OAFyB;AAGrCC,IAAAA,KAAK,EAAE,OAH8B;AAIrCC,IAAAA,MAAM,EAAE,OAJ6B;AAKrCC,IAAAA,IAAI,EAAE;AAL+B,GAAD,CAAxC;AAQA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,IAAD,CAAhD;AAIA,sBACI,oBAAC,UAAD,oBAAgBM,QAAhB;AAA0B,IAAA,oBAAoB,EAAES,OAAO,CAACC,GAAR,CAAYC,0BAA5D;AACI,IAAA,gBAAgB,EAAGX,QAAD,IAAc;AAAEC,MAAAA,WAAW,CAACD,QAAD,CAAX;AAAuB,KAD7D;AAC+D,IAAA,QAAQ,EAAC,mDADxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEKF,IAAI,CAACc,QAAL,CAAcC,GAAd,CAAmBC,IAAD,iBACf,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,IAAI,CAACC,UAAL,CAAgBC,OAA7B;AAAsC,IAAA,QAAQ,EAAEF,IAAI,CAACG,QAAL,CAAcC,WAAd,CAA0B,CAA1B,CAAhD;AAA8E,IAAA,SAAS,EAAEJ,IAAI,CAACG,QAAL,CAAcC,WAAd,CAA0B,CAA1B,CAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAA+B,IAAA,OAAO,EAAEC,CAAC,IAAI;AACzCA,MAAAA,CAAC,CAACC,cAAF;AACAZ,MAAAA,eAAe,CAACM,IAAD,CAAf;AACH,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII;AAAK,IAAA,GAAG,EAAC,gBAAT;AAA0B,IAAA,GAAG,EAAC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,CADH,CAFL,EAaKP,YAAY,gBACT,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADS,GAIT,IAjBR,CADJ;AAsBH;;AAED,eAAeR,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport ReactMapGl, { Marker, Popup } from 'react-map-gl';\nimport * as Data from './data.json';\nimport './Mapbox.css';\n\n\n\n\n\n\nfunction Mapbox() {\n    const [viewPort, setviewPort] = useState({\n        latitude: 45.4211,\n        longitude: -75.6903,\n        width: \"100vw\",\n        height: \"100vh\",\n        zoom: 10,\n    });\n\n    const [selectedPark, setSelectedPark] = useState(null);\n\n\n\n    return (\n        <ReactMapGl {...viewPort} mapboxApiAccessToken={process.env.REACT_APP_MAP_ACCESS_TOKEN}\n            onViewportChange={(viewPort) => { setviewPort(viewPort) }} mapStyle=\"mapbox://styles/nabanit/cka7uauty1vpl1ip2f33744yz\">\n            {Data.features.map((park) => (\n                <Marker key={park.properties.PARK_ID} latitude={park.geometry.coordinates[1]} longitude={park.geometry.coordinates[0]}>\n                    <button className=\"marker-btn\" onClick={e => {\n                        e.preventDefault();\n                        setSelectedPark(park);\n                    }}>\n                        <img src=\"/mapmarker.png\" alt=\"park\" />\n                    </button>\n\n                </Marker>\n            ))}\n            {selectedPark ? (\n                <Popup>\n                    park\n                </Popup>\n            ) : null}\n        </ReactMapGl>\n    )\n\n}\n\nexport default Mapbox;"]},"metadata":{},"sourceType":"module"}