{"ast":null,"code":"var _jsxFileName = \"/home/nabanit/gitproject/corona-finalmap/src/totalData.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nexport default class TotalData extends Component {\n  constructor() {\n    super();\n    this.state = {\n      totalData: [],\n      isfinalData: false\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://nepalcorona.info/api/v1/data/nepal').then(res => {\n      this.setState({\n        totalData: [res.data],\n        isfinalData: true\n      });\n    });\n  }\n\n  render() {\n    console.log(\"final data>>\", this.state);\n    const {\n      totalData,\n      isfinalData\n    } = this.state;\n    let finalData = isfinalData ? this.state.totalData.map(item => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      id: \"overall\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }, \"Overall \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, \"Infected = \", item.tested_positive), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }, \"Recovered = \", item.recovered), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }, \"Deaths = \", item.deaths), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }, \"Quarentine = \", item.quarantined), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    }, \"Total Test = \", item.tested_total), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, \"Negative Test Report = \", item.tested_negative), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, \"Positive Test Report = \", item.tested_positive), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }, \"Total RDT Test = \", item.tested_rdt), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, \"Updated On =\", item.updated_at))) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, \"Isloading\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, finalData);\n  }\n\n}","map":{"version":3,"sources":["/home/nabanit/gitproject/corona-finalmap/src/totalData.js"],"names":["React","Component","axios","TotalData","constructor","state","totalData","isfinalData","componentDidMount","get","then","res","setState","data","render","console","log","finalData","map","item","tested_positive","recovered","deaths","quarantined","tested_total","tested_negative","tested_rdt","updated_at"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAIA,eAAe,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAC7CG,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,EADF;AAETC,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAIH;;AACDC,EAAAA,iBAAiB,GAAG;AAChBN,IAAAA,KAAK,CAACO,GAAN,CAAU,4CAAV,EACKC,IADL,CACUC,GAAG,IAAI;AACT,WAAKC,QAAL,CAAc;AACVN,QAAAA,SAAS,EAAE,CAACK,GAAG,CAACE,IAAL,CADD;AAEVN,QAAAA,WAAW,EAAE;AAFH,OAAd;AAIH,KANL;AAOH;;AACDO,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAKX,KAAjC;AACA,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA6B,KAAKF,KAAxC;AACA,QAAIY,SAAS,GAAGV,WAAW,GACrB,KAAKF,KAAL,CAAWC,SAAX,CAAqBY,GAArB,CAA0BC,IAAD,iBACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,EAAE,EAAC,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAeA,IAAI,CAACC,eAApB,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgBD,IAAI,CAACE,SAArB,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaF,IAAI,CAACG,MAAlB,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAiBH,IAAI,CAACI,WAAtB,CALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAiBJ,IAAI,CAACK,YAAtB,CANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAA2BL,IAAI,CAACM,eAAhC,CAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAA2BN,IAAI,CAACC,eAAhC,CARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAqBD,IAAI,CAACO,UAA1B,CATJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgBP,IAAI,CAACQ,UAArB,CAVJ,CADF,CADqB,gBAkBrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAlBN;AAmBA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKV,SADL,CADJ;AAMH;;AA7C4C","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\n\n\nexport default class TotalData extends Component {\n    constructor() {\n        super();\n        this.state = {\n            totalData: [],\n            isfinalData: false\n        }\n    }\n    componentDidMount() {\n        axios.get('https://nepalcorona.info/api/v1/data/nepal')\n            .then(res => {\n                this.setState({\n                    totalData: [res.data],\n                    isfinalData: true\n                })\n            })\n    }\n    render() {\n        console.log(\"final data>>\", this.state);\n        const { totalData, isfinalData } = this.state;\n        let finalData = isfinalData\n            ? this.state.totalData.map((item) => (\n                <div>\n                    <p id=\"overall\">Overall </p>\n                    <p>Infected = {item.tested_positive}</p>\n                    <p>Recovered = {item.recovered}</p>\n                    <p>Deaths = {item.deaths}</p>\n                    <p>Quarentine = {item.quarantined}</p>\n                    <p>Total Test = {item.tested_total}</p>\n                    <p>Negative Test Report = {item.tested_negative}</p>\n                    <p>Positive Test Report = {item.tested_positive}</p>\n                    <p>Total RDT Test = {item.tested_rdt}</p>\n                    <p>Updated On ={item.updated_at}</p>\n\n\n                </div>\n\n            ))\n            : <p>Isloading</p>\n        return (\n            <div>\n                {finalData}\n\n            </div>\n        )\n    }\n\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}