{"ast":null,"code":"var _jsxFileName = \"/home/nabanit/gitproject/corona-finalmap/src/Mapbox.js\";\nimport React, { useEffect, useState } from 'react';\nimport ReactMapGl, { Marker, Popup } from 'react-map-gl';\nimport { coronaNepal } from './../src/httpBrowsing';\nimport './Mapbox.css';\nimport * as Data from './data.json';\nimport axios from 'axios';\n\nfunction Mapbox() {\n  const [viewPort, setviewPort] = useState({\n    latitude: 27.713264,\n    longitude: 85.322985,\n    width: \"100vw\",\n    height: \"100vh\",\n    zoom: 10\n  });\n  const [coronaNepal, setcoronaNepal] = useState([]);\n  useEffect(() => {\n    axios.get('https://data.nepalcorona.info/api/v1/covid').then(res => {\n      console.log(\"what is this>>\", res);\n      setcoronaNepal(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  console.log(\"what is coronanepal>>\", coronaNepal);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ReactMapGl, Object.assign({}, viewPort, {\n    mapboxApiAccessToken: \"pk.eyJ1IjoibmFiYW5pdCIsImEiOiJja2E4MXR3NDkwNGMxMzJzOWF4Zzk1cmRxIn0.PlAUDME-BUb9gV-DCutXzw\",\n    mapStyle: \"mapbox://styles/nabanit/cka7uauty1vpl1ip2f33744yz\",\n    onViewportChange: viewPort => setviewPort(viewPort),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/recovered.jpeg\",\n    alt: \"recovered\",\n    height: \"10px\",\n    width: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), \"Test\", coronaNepal.filter(local => local.currentState === 'recovered').map(local => /*#__PURE__*/React.createElement(Marker, {\n    key: local.id,\n    latitude: local.point.coordinates[1],\n    longitude: local.point.coordinates[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"marker-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/recovered.jpeg\",\n    alt: \"recovered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  })))), coronaNepal.filter(local => local.currentState === 'active').map(local => /*#__PURE__*/React.createElement(Marker, {\n    key: local.id,\n    latitude: local.point.coordinates[1],\n    longitude: local.point.coordinates[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"marker-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/ongoing.gif\",\n    alt: \"ongoing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  })))), coronaNepal.filter(local => local.currentState === 'death').map(local => /*#__PURE__*/React.createElement(Marker, {\n    key: local.id,\n    latitude: local.point.coordinates[1],\n    longitude: local.point.coordinates[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"marker-btn-dead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/dead.gif\",\n    alt: \"dead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }))))));\n}\n\nexport default Mapbox;","map":{"version":3,"sources":["/home/nabanit/gitproject/corona-finalmap/src/Mapbox.js"],"names":["React","useEffect","useState","ReactMapGl","Marker","Popup","coronaNepal","Data","axios","Mapbox","viewPort","setviewPort","latitude","longitude","width","height","zoom","setcoronaNepal","get","then","res","console","log","data","catch","err","filter","local","currentState","map","id","point","coordinates"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReactMapGl, { Marker, Popup } from 'react-map-gl';\nimport { coronaNepal } from './../src/httpBrowsing';\nimport './Mapbox.css';\nimport * as Data from './data.json';\nimport axios from 'axios';\n\n\nfunction Mapbox() {\n\n    const [viewPort, setviewPort] = useState({\n        latitude: 27.713264,\n        longitude: 85.322985,\n        width: \"100vw\",\n        height: \"100vh\",\n        zoom: 10,\n    })\n    const [coronaNepal, setcoronaNepal] = useState([])\n    useEffect(() => {\n        axios.get('https://data.nepalcorona.info/api/v1/covid')\n            .then(res => {\n                console.log(\"what is this>>\", res);\n                setcoronaNepal(res.data)\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, [])\n\n    console.log(\"what is coronanepal>>\", coronaNepal);\n    return (\n        <div>\n\n\n\n            <ReactMapGl {...viewPort} mapboxApiAccessToken=\"pk.eyJ1IjoibmFiYW5pdCIsImEiOiJja2E4MXR3NDkwNGMxMzJzOWF4Zzk1cmRxIn0.PlAUDME-BUb9gV-DCutXzw\" mapStyle=\"mapbox://styles/nabanit/cka7uauty1vpl1ip2f33744yz\"\n                onViewportChange={(viewPort) => setviewPort(viewPort)}>\n                <img src=\"/recovered.jpeg\" alt=\"recovered\" height=\"10px\" width=\"10px\" />Test\n                {coronaNepal.filter((local) => local.currentState === 'recovered').map((local) => (\n                    <Marker key={local.id} latitude={local.point.coordinates[1]} longitude={local.point.coordinates[0]}>\n                        <button className=\"marker-btn\">\n                            <img src=\"/recovered.jpeg\" alt=\"recovered\" />\n                        </button>\n\n                    </Marker>\n                ))}\n                {coronaNepal.filter((local) => local.currentState === 'active').map((local) => (\n                    <Marker key={local.id} latitude={local.point.coordinates[1]} longitude={local.point.coordinates[0]}>\n                        <button className=\"marker-btn\">\n                            <img src=\"/ongoing.gif\" alt=\"ongoing\" />\n                        </button>\n\n                    </Marker>\n                ))}\n                {coronaNepal.filter((local) => local.currentState === 'death').map((local) => (\n                    <Marker key={local.id} latitude={local.point.coordinates[1]} longitude={local.point.coordinates[0]}>\n                        <button className=\"marker-btn-dead\">\n                            <img src=\"/dead.gif\" alt=\"dead\" />\n                        </button>\n\n                    </Marker>\n                ))}\n\n\n\n\n            </ReactMapGl>\n        </div>\n    )\n\n\n\n}\n\nexport default Mapbox;\n\n"]},"metadata":{},"sourceType":"module"}