{"ast":null,"code":"var _jsxFileName = \"/home/nabanit/gitproject/corona-finalmap/src/Mapbox.js\";\nimport React, { useEffect, useState } from 'react';\nimport ReactMapGl, { Marker, Popup } from 'react-map-gl';\nimport { coronaNepal } from './../src/httpBrowsing';\nimport './Mapbox.css';\nimport * as Data from './data.json';\nimport axios from 'axios';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport TotalData from './../src/totalData';\n\nfunction Mapbox() {\n  const [viewPort, setviewPort] = useState({\n    latitude: 27.713264,\n    longitude: 85.322985,\n    width: \"100vw\",\n    height: \"100vh\",\n    zoom: 10\n  });\n  const [coronaNepal, setcoronaNepal] = useState([]);\n  const [selectedPerson, setselectedPerson] = useState(null);\n  const [provinence, setprovinence] = useState([]);\n  useEffect(() => {\n    axios.get('https://data.nepalcorona.info/api/v1/covid').then(res => {\n      console.log(\"what is this>>\", res);\n      setcoronaNepal(res.data);\n      setprovinence(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  console.log(\"what is coronanepal>>\", coronaNepal);\n  console.log(\"what is provinence>>\", provinence);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-2 legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/recovered.jpeg\",\n    alt: \"recovered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }), \":Recovered\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 76\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/ongoing.gif\",\n    alt: \"ongoing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }), \":Treatment Ongoing\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 79\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/dead.gif\",\n    alt: \"dead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }), \":Death\", /*#__PURE__*/React.createElement(TotalData, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ReactMapGl, Object.assign({\n    className: \"map-react\"\n  }, viewPort, {\n    mapboxApiAccessToken: \"pk.eyJ1IjoibmFiYW5pdCIsImEiOiJja2E4MXR3NDkwNGMxMzJzOWF4Zzk1cmRxIn0.PlAUDME-BUb9gV-DCutXzw\",\n    mapStyle: \"mapbox://styles/nabanit/cka7uauty1vpl1ip2f33744yz\",\n    onViewportChange: viewPort => setviewPort(viewPort),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }), coronaNepal.filter(local => local.currentState === 'recovered').map(local => /*#__PURE__*/React.createElement(Marker, {\n    key: local.id,\n    latitude: local.point.coordinates[1],\n    longitude: local.point.coordinates[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"marker-btn\",\n    onMouseOver: e => {\n      e.preventDefault();\n      setselectedPerson(local);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/recovered.jpeg\",\n    alt: \"recovered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 37\n    }\n  })))), coronaNepal.filter(local => local.currentState === 'active').map(local => /*#__PURE__*/React.createElement(Marker, {\n    key: local.id,\n    latitude: local.point.coordinates[1],\n    longitude: local.point.coordinates[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"marker-btn\",\n    onMouseOver: e => {\n      e.preventDefault();\n      setselectedPerson(local);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/ongoing.gif\",\n    alt: \"ongoing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 37\n    }\n  })))), coronaNepal.filter(local => local.currentState === 'death').map(local => /*#__PURE__*/React.createElement(Marker, {\n    key: local.id,\n    latitude: local.point.coordinates[1],\n    longitude: local.point.coordinates[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"marker-btn-dead\",\n    onMouseOver: e => {\n      e.preventDefault();\n      setselectedPerson(local);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/dead.gif\",\n    alt: \"dead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 37\n    }\n  })))), selectedPerson ? /*#__PURE__*/React.createElement(Popup, {\n    latitude: selectedPerson.point.coordinates[1],\n    longitude: selectedPerson.point.coordinates[0],\n    onClose: () => setselectedPerson(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 37\n    }\n  }, \"Age=\", selectedPerson.age), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 37\n    }\n  }, \"Gender=\", selectedPerson.gender), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 37\n    }\n  }, \"Reported On=\", selectedPerson.reportedOn), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 37\n    }\n  }, \"Recovered On=\", selectedPerson.recoveredOn), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 37\n    }\n  }, \"Transmission Type=\", selectedPerson.type), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 37\n    }\n  }, \"current Status=\", selectedPerson.currentState), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 37\n    }\n  }, \"latitude=\", selectedPerson.point.coordinates[1], \",longitude=\", selectedPerson.point.coordinates[0]))) : null))));\n}\n\nexport default Mapbox;","map":{"version":3,"sources":["/home/nabanit/gitproject/corona-finalmap/src/Mapbox.js"],"names":["React","useEffect","useState","ReactMapGl","Marker","Popup","coronaNepal","Data","axios","NativeSelect","FormControl","TotalData","Mapbox","viewPort","setviewPort","latitude","longitude","width","height","zoom","setcoronaNepal","selectedPerson","setselectedPerson","provinence","setprovinence","get","then","res","console","log","data","catch","err","filter","local","currentState","map","id","point","coordinates","e","preventDefault","age","gender","reportedOn","recoveredOn","type"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReactMapGl, { Marker, Popup } from 'react-map-gl';\nimport { coronaNepal } from './../src/httpBrowsing';\nimport './Mapbox.css';\nimport * as Data from './data.json';\nimport axios from 'axios';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport TotalData from './../src/totalData';\n\n\nfunction Mapbox() {\n\n    const [viewPort, setviewPort] = useState({\n        latitude: 27.713264,\n        longitude: 85.322985,\n        width: \"100vw\",\n        height: \"100vh\",\n        zoom: 10,\n    })\n    const [coronaNepal, setcoronaNepal] = useState([]);\n    const [selectedPerson, setselectedPerson] = useState(null);\n    const [provinence, setprovinence] = useState([]);\n\n    useEffect(() => {\n        axios.get('https://data.nepalcorona.info/api/v1/covid')\n            .then(res => {\n                console.log(\"what is this>>\", res);\n                setcoronaNepal(res.data)\n                setprovinence(res.data)\n\n            })\n            .catch(err => {\n                console.log(err);\n            })\n\n\n    }, [])\n\n\n    console.log(\"what is coronanepal>>\", coronaNepal);\n    console.log(\"what is provinence>>\", provinence);\n\n\n\n\n    return (\n        <div>\n            <div className=\"row\">\n                <div className=\"col-2 legend\">\n                    <img src=\"/recovered.jpeg\" alt=\"recovered\" />:Recovered<br />\n                    <img src=\"/ongoing.gif\" alt=\"ongoing\" />:Treatment Ongoing<br />\n                    <img src=\"/dead.gif\" alt=\"dead\" />:Death\n                    <TotalData />\n                </div>\n\n                <div className=\"col-10\">\n                    <ReactMapGl className=\"map-react\" {...viewPort} mapboxApiAccessToken=\"pk.eyJ1IjoibmFiYW5pdCIsImEiOiJja2E4MXR3NDkwNGMxMzJzOWF4Zzk1cmRxIn0.PlAUDME-BUb9gV-DCutXzw\" mapStyle=\"mapbox://styles/nabanit/cka7uauty1vpl1ip2f33744yz\"\n                        onViewportChange={(viewPort) => setviewPort(viewPort)}>\n                        {coronaNepal.filter((local) => local.currentState === 'recovered').map((local) => (\n                            <Marker key={local.id} latitude={local.point.coordinates[1]} longitude={local.point.coordinates[0]}>\n                                <button className=\"marker-btn\" onMouseOver={e => {\n                                    e.preventDefault();\n                                    setselectedPerson(local);\n                                }}>\n                                    <img src=\"/recovered.jpeg\" alt=\"recovered\" />\n                                </button>\n\n                            </Marker>\n                        ))}\n                        {coronaNepal.filter((local) => local.currentState === 'active').map((local) => (\n                            <Marker key={local.id} latitude={local.point.coordinates[1]} longitude={local.point.coordinates[0]}>\n                                <button className=\"marker-btn\" onMouseOver={e => {\n                                    e.preventDefault();\n                                    setselectedPerson(local);\n                                }}>\n                                    <img src=\"/ongoing.gif\" alt=\"ongoing\" />\n                                </button>\n\n                            </Marker>\n                        ))}\n                        {coronaNepal.filter((local) => local.currentState === 'death').map((local) => (\n                            <Marker key={local.id} latitude={local.point.coordinates[1]} longitude={local.point.coordinates[0]}>\n                                <button className=\"marker-btn-dead\" onMouseOver={e => {\n                                    e.preventDefault();\n                                    setselectedPerson(local);\n                                }}>\n                                    <img src=\"/dead.gif\" alt=\"dead\" />\n                                </button>\n\n                            </Marker>\n                        ))}\n\n                        {selectedPerson ? (\n                            <Popup latitude={selectedPerson.point.coordinates[1]} longitude={selectedPerson.point.coordinates[0]}\n                                onClose={() => (setselectedPerson(null))}>\n\n\n\n                                <div>\n\n                                    <p>Age={selectedPerson.age}</p>\n                                    <p>Gender={selectedPerson.gender}</p>\n                                    <p>Reported On={selectedPerson.reportedOn}</p>\n                                    <p>Recovered On={selectedPerson.recoveredOn}</p>\n                                    <p>Transmission Type={selectedPerson.type}</p>\n                                    <p>current Status={selectedPerson.currentState}</p>\n                                    <p>latitude={selectedPerson.point.coordinates[1]},longitude={selectedPerson.point.coordinates[0]}</p>\n                                </div>\n                            </Popup>\n                        ) : null}\n\n\n\n                    </ReactMapGl>\n                </div>\n            </div>\n        </div>\n    )\n\n\n\n}\n\nexport default Mapbox;\n\n"]},"metadata":{},"sourceType":"module"}